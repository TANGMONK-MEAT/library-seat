<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.library.mapper.LeaveMapper">
  <resultMap id="BaseResultMap" type="com.github.library.entity.Leave">
    <id column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="back_time" jdbcType="TIMESTAMP" property="backTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    l_id, seat_id, user_id, leave_time, back_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.library.entity.Leave">
    insert into t_leave (l_id, seat_id, user_id, 
      leave_time, back_time, status
      )
    values (#{lId,jdbcType=INTEGER}, #{seatId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{leaveTime,jdbcType=TIMESTAMP}, #{backTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.library.entity.Leave">
    insert into t_leave
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        l_id,
      </if>
      <if test="seatId != null">
        seat_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="backTime != null">
        back_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="seatId != null">
        #{seatId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
        #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.library.entity.Leave">
    update t_leave
    <set>
      <if test="seatId != null">
        seat_id = #{seatId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
        back_time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.library.entity.Leave">
    update t_leave
    set seat_id = #{seatId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      back_time = #{backTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.github.library.entity.Leave">
    <id column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="back_time" jdbcType="TIMESTAMP" property="backTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    l_id, seat_id, user_id, leave_time, back_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.library.entity.Leave">
    insert into t_leave (l_id, seat_id, user_id, 
      leave_time, back_time, status
      )
    values (#{lId,jdbcType=INTEGER}, #{seatId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{leaveTime,jdbcType=TIMESTAMP}, #{backTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.library.entity.Leave">
    insert into t_leave
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        l_id,
      </if>
      <if test="seatId != null">
        seat_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="backTime != null">
        back_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="seatId != null">
        #{seatId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
        #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.library.entity.Leave">
    update t_leave
    <set>
      <if test="seatId != null">
        seat_id = #{seatId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
        back_time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.library.entity.Leave">
    update t_leave
    set seat_id = #{seatId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      back_time = #{backTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.github.library.entity.Leave">
    <id column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="seat_id" jdbcType="INTEGER" property="seatId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="leave_time" jdbcType="TIMESTAMP" property="leaveTime" />
    <result column="back_time" jdbcType="TIMESTAMP" property="backTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    l_id, seat_id, user_id, leave_time, back_time, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.library.entity.Leave">
    insert into t_leave (l_id, seat_id, user_id, 
      leave_time, back_time, status
      )
    values (#{lId,jdbcType=INTEGER}, #{seatId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{leaveTime,jdbcType=TIMESTAMP}, #{backTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.library.entity.Leave">
    insert into t_leave
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        l_id,
      </if>
      <if test="seatId != null">
        seat_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="leaveTime != null">
        leave_time,
      </if>
      <if test="backTime != null">
        back_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="seatId != null">
        #{seatId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
        #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.library.entity.Leave">
    update t_leave
    <set>
      <if test="seatId != null">
        seat_id = #{seatId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null">
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backTime != null">
        back_time = #{backTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.library.entity.Leave">
    update t_leave
    set seat_id = #{seatId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      back_time = #{backTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
</mapper>